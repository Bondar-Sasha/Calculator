{"version":3,"file":"c9d453079c7874c1e57e.js","mappings":"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","sources":["webpack://calculator/./src/data/colorScheme/colorScheme.js","webpack://calculator/./src/data/colorScheme/initColors.js","webpack://calculator/./src/utils/getElById.js","webpack://calculator/./src/css/createColorSchemes.js","webpack://calculator/./src/logic/core/actions.js","webpack://calculator/./src/logic/core/calculateExpression.js","webpack://calculator/./src/logic/core/init.js","webpack://calculator/./src/logic/dataAndValues.js","webpack://calculator/./src/logic/handler.js","webpack://calculator/./src/index.js"],"sourcesContent":["const colorsData = [\r\n   {\r\n      mainFond: 'rgb(186, 196, 205)',\r\n      fond: '#333333',\r\n      screen: {\r\n         fond: '#b8c0a9',\r\n         data: '#333333',\r\n      },\r\n      buttons: {\r\n         fond: '#838383',\r\n         data: '#fcfcfc',\r\n      },\r\n   },\r\n   {\r\n      mainFond: 'rgb(186, 196, 205)',\r\n\r\n      fond: '#40668b',\r\n      screen: {\r\n         fond: '#e9eeef',\r\n         data: '#25312f',\r\n      },\r\n      buttons: {\r\n         fond: '#25312f',\r\n         data: '#e9eeef',\r\n      },\r\n   },\r\n   {\r\n      mainFond: 'rgb(186, 196, 205)',\r\n\r\n      fond: '#333333',\r\n      screen: {\r\n         fond: 'rgb(151, 154, 157)',\r\n         data: '#333333',\r\n      },\r\n      buttons: {\r\n         fond: 'rgb(151, 154, 157)',\r\n         data: '#333333',\r\n      },\r\n   },\r\n   {\r\n      mainFond: 'rgb(186, 196, 205)',\r\n\r\n      fond: '#019a9c',\r\n      screen: {\r\n         fond: 'aliceblue',\r\n         data: '#333333',\r\n      },\r\n      buttons: {\r\n         fond: 'aliceblue',\r\n         data: '#333333',\r\n      },\r\n   },\r\n   {\r\n      mainFond: 'rgb(186, 196, 205)',\r\n\r\n      fond: '#565c6c',\r\n      screen: {\r\n         fond: '#36b7d4',\r\n         data: '#333333',\r\n      },\r\n      buttons: {\r\n         fond: '#36b7d4',\r\n         data: '#333333',\r\n      },\r\n   },\r\n]\r\n\r\nexport const initialColors = {\r\n   '--mainFond': colorsData[0].mainFond,\r\n   '--fond': colorsData[0].fond,\r\n   '--screenFond': colorsData[0].screen.fond,\r\n   '--screenColor': colorsData[0].screen.data,\r\n   '--buttonsFond': colorsData[0].buttons.fond,\r\n   '--buttonsColor': colorsData[0].buttons.data,\r\n}\r\n\r\nexport default colorsData\r\n","export default data => {\r\n   const root = document.documentElement\r\n   Object.entries(data).forEach(item => {\r\n      root.style.setProperty(item[0], item[1])\r\n   })\r\n}\r\n","export default id => document.getElementById(id)\r\n","import schemeData from '../data/colorScheme/colorScheme.js'\r\nimport initColors from '../data/colorScheme/initColors.js'\r\nimport getElById from '../utils/getElById.js'\r\n\r\nconst container = getElById('color_scheme')\r\n\r\nschemeData.forEach(item => {\r\n   const scheme = document.createElement('div')\r\n   scheme.setAttribute('class', 'colors_container')\r\n\r\n   const preperedColors = {\r\n      '--fond': item.fond,\r\n      '--screenFond': item.screen.fond,\r\n      '--screenColor': item.screen.data,\r\n      '--buttonsFond': item.buttons.fond,\r\n      '--buttonsColor': item.buttons.data,\r\n   }\r\n\r\n   scheme.addEventListener('click', () => {\r\n      initColors(preperedColors)\r\n   })\r\n   scheme.style.borderTopColor = item.fond\r\n   scheme.style.borderRightColor = item.screen.fond\r\n   scheme.style.borderLeftColor = item.buttons.fond\r\n\r\n   container.append(scheme)\r\n})\r\n","import Calculator from './init.js'\r\nimport evaluateExpression from './calculateExpression'\r\n\r\nclass CalculatorActions extends Calculator {\r\n   getData = () => this.data.join('')\r\n\r\n   lastElIndex = () => this.data.length - 1\r\n\r\n   setValue = value => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (lastEl === 'error') this.data = []\r\n\r\n      if (lastEl === '0' || lastEl === '-0') {\r\n         return false\r\n      }\r\n\r\n      if (!isNaN(lastEl) && lastEl !== '0') {\r\n         this.data[lastElIndex] += value\r\n         return true\r\n      }\r\n\r\n      if (value === '0' && lastEl !== '0') {\r\n         this.data = [...this.data, value]\r\n         return true\r\n      }\r\n\r\n      this.data = [...this.data, value]\r\n      return true\r\n   }\r\n\r\n   clear = () => {\r\n      this.data = []\r\n      return true\r\n   }\r\n\r\n   change_sign = () => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (lastEl === '0' || lastEl === undefined) {\r\n         this.data = ['-']\r\n         return true\r\n      }\r\n\r\n      if (lastEl === '-' && this.data.length === 1) {\r\n         this.data = []\r\n         return true\r\n      }\r\n      if (!Number(lastEl)) return false\r\n\r\n      if (lastEl[0] === '-') {\r\n         this.data[lastElIndex] = lastEl.substring(1)\r\n         return true\r\n      }\r\n\r\n      if (this.data[lastElIndex - 1] === '+') {\r\n         this.data[lastElIndex - 1] = '-'\r\n         return true\r\n      }\r\n\r\n      if (this.data[lastElIndex - 1] === '-') {\r\n         this.data[lastElIndex - 1] = '+'\r\n         return true\r\n      }\r\n\r\n      this.data[lastElIndex] = '-' + lastEl\r\n      return true\r\n   }\r\n\r\n   addOperator(operator) {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n      const isNum = Number(lastEl)\r\n\r\n      if (isNum || isNum === 0) {\r\n         this.data = [...this.data, operator]\r\n         return true\r\n      }\r\n      return true\r\n   }\r\n\r\n   percent = () => {\r\n      this.addOperator('%')\r\n      return true\r\n   }\r\n\r\n   division = () => {\r\n      this.addOperator('/')\r\n      return true\r\n   }\r\n\r\n   multiply = () => {\r\n      this.addOperator('*')\r\n      return true\r\n   }\r\n\r\n   minus = () => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (this.data.length === 0) {\r\n         this.data = ['-']\r\n         return true\r\n      }\r\n      const isNum = Number(lastEl)\r\n\r\n      if (isNum || isNum === 0) {\r\n         this.data = [...this.data, '-']\r\n         return true\r\n      }\r\n\r\n      this.data[lastElIndex] = '-'\r\n      return true\r\n   }\r\n\r\n   sum = () => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (lastEl === '-') {\r\n         this.data = []\r\n         return true\r\n      }\r\n\r\n      const isNum = Number(lastEl)\r\n\r\n      if (isNum || isNum === 0) {\r\n         this.data = [...this.data, '+']\r\n         return true\r\n      }\r\n\r\n      this.data[lastElIndex] = '+'\r\n      return true\r\n   }\r\n\r\n   dot = () => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (lastEl && lastEl.includes('.')) return false\r\n      if (lastEl === '0') {\r\n         this.data[lastElIndex] += '.'\r\n         return true\r\n      }\r\n\r\n      if (Number(lastEl)) {\r\n         this.data[lastElIndex] += '.'\r\n         return true\r\n      }\r\n   }\r\n\r\n   equal = () => {\r\n      const lastElIndex = this.lastElIndex()\r\n      const lastEl = this.data[lastElIndex]\r\n\r\n      if (this.data.length === 0) return false\r\n\r\n      if (lastEl === 'error') {\r\n         this.data = []\r\n         return true\r\n      }\r\n\r\n      if (!Number(lastEl)) this.data = this.data.slice(0, -1)\r\n\r\n      const result = evaluateExpression(this.data)\r\n      this.data = [result]\r\n      return true\r\n   }\r\n\r\n   actions = () => {\r\n      const { setValue, clear, dot, equal, percent, minus, sum, multiply, change_sign, division } = this\r\n      return {\r\n         setValue,\r\n         clear,\r\n         percent,\r\n         change_sign,\r\n         dot,\r\n         division,\r\n         multiply,\r\n         minus,\r\n         equal,\r\n         sum,\r\n      }\r\n   }\r\n}\r\n\r\nexport default new CalculatorActions()\r\n","export default function evaluateExpression(tokens) {\r\n   function applyOperator(operators, values) {\r\n      const operator = operators.pop()\r\n      const right = values.pop()\r\n      const left = values.pop()\r\n\r\n      switch (operator) {\r\n         case '+':\r\n            values.push(left + right)\r\n            break\r\n         case '-':\r\n            values.push(left - right)\r\n            break\r\n         case '*':\r\n            values.push(left * right)\r\n            break\r\n         case '/':\r\n            if (right === 0) {\r\n               throw new Error('Division by zero')\r\n            }\r\n            values.push(left / right)\r\n            break\r\n         case '%':\r\n            values.push((left * right) / 100)\r\n            break\r\n         default:\r\n            throw new Error('Unknown operator')\r\n      }\r\n   }\r\n\r\n   function precedence(op) {\r\n      if (op === '+' || op === '-') return 1\r\n      if (op === '*' || op === '/' || op === '%') return 2\r\n      return 0\r\n   }\r\n\r\n   try {\r\n      if (!Array.isArray(tokens) || tokens.length === 0) {\r\n         throw new Error('Invalid expression')\r\n      }\r\n\r\n      const operators = []\r\n      const values = []\r\n\r\n      for (const token of tokens) {\r\n         if (!isNaN(token)) {\r\n            values.push(parseFloat(token))\r\n         } else if (['+', '-', '*', '/', '%'].includes(token)) {\r\n            while (operators.length && precedence(operators[operators.length - 1]) >= precedence(token)) {\r\n               applyOperator(operators, values)\r\n            }\r\n            operators.push(token)\r\n         } else {\r\n            throw new Error('Invalid input')\r\n         }\r\n      }\r\n\r\n      while (operators.length) {\r\n         applyOperator(operators, values)\r\n      }\r\n\r\n      const result = values.length ? values[0] : null\r\n      return result !== null && !isNaN(result) ? result.toString() : 'error'\r\n   } catch (error) {\r\n      return 'error'\r\n   }\r\n}\r\n","class Calculator {\r\n   constructor() {\r\n      this.data = []\r\n   }\r\n   getData() {\r\n      throw new Error('The \"getData\" method must be implemented')\r\n   }\r\n\r\n   actions() {\r\n      throw new Error('The \"actions\" method must be implemented')\r\n   }\r\n}\r\nexport default Calculator\r\n","import getElById from '../utils/getElById'\r\nimport calculator from './core/actions'\r\n\r\nconst { setValue, clear, change_sign, minus, percent, multiply, sum, dot, equal, division } = calculator.actions()\r\n\r\nexport const interactiveButtons = {\r\n   value_0: { el: getElById('value_0'), handler: setValue, value: '0' },\r\n   value_1: { el: getElById('value_1'), handler: setValue, value: '1' },\r\n   value_2: { el: getElById('value_2'), handler: setValue, value: '2' },\r\n   value_3: { el: getElById('value_3'), handler: setValue, value: '3' },\r\n   value_4: { el: getElById('value_4'), handler: setValue, value: '4' },\r\n   value_5: { el: getElById('value_5'), handler: setValue, value: '5' },\r\n   value_6: { el: getElById('value_6'), handler: setValue, value: '6' },\r\n   value_7: { el: getElById('value_7'), handler: setValue, value: '7' },\r\n   value_8: { el: getElById('value_8'), handler: setValue, value: '8' },\r\n   value_9: { el: getElById('value_9'), handler: setValue, value: '9' },\r\n   clear: { el: getElById('clear'), handler: clear },\r\n   change_sign: { el: getElById('change_sign'), handler: change_sign },\r\n   percent: { el: getElById('percent'), handler: percent },\r\n   division: { el: getElById('division'), handler: division },\r\n   multiply: { el: getElById('multiply'), handler: multiply },\r\n   minus: { el: getElById('minus'), handler: minus },\r\n   sum: { el: getElById('sum'), handler: sum },\r\n   dot: { el: getElById('dot'), handler: dot },\r\n   equal: { el: getElById('equal'), handler: equal },\r\n}\r\n","import calculator from './core/actions'\r\nimport getElById from '../utils/getElById'\r\nimport { interactiveButtons } from './dataAndValues'\r\n\r\nconst dataInput = getElById('screen_data')\r\nconst buttonsEl = getElById('input_buttons')\r\n\r\nObject.keys(interactiveButtons).forEach(item => {\r\n   const buttonInf = interactiveButtons[item]\r\n   if (Object.prototype.hasOwnProperty.call(buttonInf, 'value')) {\r\n      buttonInf.el.addEventListener('click', () => {\r\n         buttonInf.handler(buttonInf.value)\r\n      })\r\n   } else {\r\n      buttonInf.el.addEventListener('click', () => {\r\n         buttonInf.handler()\r\n      })\r\n   }\r\n})\r\n\r\nbuttonsEl.addEventListener('click', e => {\r\n   if (e.target.tagName === 'BUTTON') {\r\n      dataInput.scrollLeft = dataInput.scrollWidth\r\n      dataInput.textContent = calculator.getData()\r\n   }\r\n})\r\n","import './css/css.js'\r\nimport './css/createColorSchemes.js'\r\nimport './logic/handler.js'\r\nimport initColors from './data/colorScheme/initColors.js'\r\nimport { initialColors } from './data/colorScheme/colorScheme.js'\r\n\r\ninitColors(initialColors)\r\n"],"names":["colorsData","mainFond","fond","screen","data","buttons","initialColors","root","document","documentElement","Object","entries","forEach","item","style","setProperty","id","getElementById","container","getElById","schemeData","scheme","createElement","setAttribute","preperedColors","addEventListener","initColors","borderTopColor","borderRightColor","borderLeftColor","append","CalculatorActions","_Calculator","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_defineProperty","_callSuper","concat","join","value","lastElIndex","lastEl","isNaN","_toConsumableArray","undefined","Number","substring","addOperator","isNum","includes","slice","result","tokens","applyOperator","operators","values","operator","pop","right","left","push","Error","precedence","op","isArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","token","parseFloat","err","e","f","toString","error","evaluateExpression","_this2","setValue","clear","dot","equal","percent","minus","sum","multiply","change_sign","division","_inherits","key","this","Calculator","_calculator$actions","calculator","actions","interactiveButtons","value_0","el","handler","value_1","value_2","value_3","value_4","value_5","value_6","value_7","value_8","value_9","dataInput","buttonsEl","keys","buttonInf","prototype","hasOwnProperty","call","target","tagName","scrollLeft","scrollWidth","textContent","getData"],"sourceRoot":""}